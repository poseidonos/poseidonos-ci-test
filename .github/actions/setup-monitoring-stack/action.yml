name: "Setup Monitoring"
Description: "This action deploy monitoring stacks for poseidonos"
inputs:
  POS_WORKING_DIR:
    required: true
  GA_COMMIT_HASH:
    required: true
  GA_WORKFLOW:
    required: true
  GA_DETAIL:
    required: true
    
  POS_EXPORTER_PORT:
    required: true

  AMP_REMOTE_WRITE_URL:
    required: true
  AMP_SIGV4_REGION:
    required: true
  AMP_SIGV4_ACCESS_KEY:
    required: true
  AMP_SIGV4_SECRET_KEY:
    required: true
  
  LOGSTASH_PORT:									      
    required: true
  
  OS_DOMAIN_ENDPOINT:
    required: true
  OS_REGION:
    required: true
  
runs:
  using: "composite"
  steps:
#    - name: "Set environment variable"
#      env:
#        PROMETHEUS_CONF_PATH: ${{ inputs.POS_WORKING_DIR}}/config/prometheus.yml
#        FILEBEAT_CONF_PATH: ${{ inputs.POS_WORKING_DIR}}/config/filebeat.yml
#        LOGSTASH_CONF_PATH: ${{ inputs.POS_WORKING_DIR}}/config/logstash.conf
#
#    - shell: bash
#      run: echo ${env.PROMETHEUS_CONF_PATH}/${env.FILEBEAT_CONF_PATH}/${env.LOGSTASH_CONF_PATH}
#
#    - name: "Run pos-exporter"
#      run: bash nohup ${{inputs.POS_WORKING_DIR}}/bin/pos-exporter < /dev/null 1> ${POS_WORKING_DIR}/bin/pos-exporter_stdout.txt  2> ${POS_WORKING_DIR}/bin/pos-exporter_stderr.txt

    - name: "Prometheus - config setting"
      shell: bash
      env:
        PROMETHEUS_CONF_PATH: ${{ inputs.POS_WORKING_DIR }}/config/prometheus.yml
        
        GA_COMMIT_HASH: ${{ inputs.GA_COMMIT_HASH }}
        GA_WORKFLOW: ${{ inputs.GA_WORKFLOW }}
        GA_DETAIL: ${{ inputs.GA_DETAIL }}
        
        AMP_SIGV4_REGION: ${{ inputs.AMP_SIGV4_REGION }}
        AMP_SIGV4_ACCESS_KEY: ${{ inputs.AMP_SIGV4_ACCESS_KEY }}
        AMP_SIGV4_SECRET_KEY: ${{ inputs.AMP_SIGV4_SECRET_KEY }}
      run: |
        # Prometheus config setting
        cat > ${PROMETHEUS_CONF_PATH} <<-EOF
scrape_configs:
  - job_name: "Github-Action"
    scrape_interval: 1s
    static_configs:
      - targets: ["$(hostname -i):${ POS_EXPORTER_PORT }"]
        labels:
          ga_commit_hash: "${ GA_COMMIT_HASH }"
          ga_workflow: "${ inputs.GA_WORKFLOW }"
          ga_detail: "${ GA_DETAIL }"
remote_write:
  - url: ${ AMP_REMOTE_WRITE_URL }
    sigv4:
      region: ${ AMP_SIGV4_REGION }
      access_key: ${ AMP_SIGV4_ACCESS_KEY }
      secret_key: ${ AMP_SIGV4_SECRET_KEY }
EOF

    - run: echo "123"
      shell: bash
